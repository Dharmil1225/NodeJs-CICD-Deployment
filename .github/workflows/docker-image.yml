name: CICD

on:
  push:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/node-js-app .
      - name: Publish image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/node-js-app:latest

  deploy:
    needs: build
    runs-on: [self-hosted]
    steps:
    - name: Pull image from Docker Hub
      run: docker pull ${{ secrets.DOCKER_USERNAME }}/node-js-app:latest

    - name: Delete old container
      run: docker rm -f nodejs-app-container || true

    - name: Ensure .env file exists
      run: |
        if [ ! -f /home/ubuntu/nodejs-app.env ]; then
          echo "DATABASE_HOST=host.docker.internal" > /home/ubuntu/nodejs-app.env
          echo "DATABASE_PORT=5432" >> /home/ubuntu/nodejs-app.env
          echo "DATABASE_USER=postgres" >> /home/ubuntu/nodejs-app.env
          echo "DATABASE_PASSWORD=admin" >> /home/ubuntu/nodejs-app.env
          echo "DATABASE_NAME=test" >> /home/ubuntu/nodejs-app.env
        fi

    - name: Run Docker container using .env file
      run: |
        docker run -d -p 9001:9001 --name nodejs-app-container \
          --env-file /home/ubuntu/nodejs-app.env \
          ${{ secrets.DOCKER_USERNAME }}/node-js-app
